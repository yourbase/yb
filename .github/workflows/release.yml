# Copyright 2020 YourBase Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Release
on:
  release:
    types: [published]
env:
  AWS_REGION: us-west-2
jobs:
  unix:
    name: Unix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macOS-latest]
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "^1.15"
    - name: Check out code
      uses: actions/checkout@v2
    - name: Download dependencies
      run: go mod download
      env:
        GO111MODULE: on
    - id: package
      name: Package release
      run: release/release.sh
      env:
        GO111MODULE: on
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Upload binary archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ steps.package.outputs.file }}
        asset_name: ${{ steps.package.outputs.file }}
        asset_content_type: application/zip
  debian:
    name: Debian
    runs-on: ubuntu-18.04
    steps:
    - name: Install Debian tooling
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends dpkg gnupg lintian
    - name: Import signing key
      run: echo "$APT_SIGNING_KEY" | gpg --import --batch --no-tty
      env:
        APT_SIGNING_KEY: ${{secrets.APT_SIGNING_KEY}}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "^1.15"
    - name: Check out code
      uses: actions/checkout@v2
    - name: Download dependencies
      run: go mod download
      env:
        GO111MODULE: on
    - name: Install aptblob
      run: cd "$HOME" && GOPATH="$HOME" go get zombiezen.com/go/aptblob
      env:
        GO111MODULE: on
    - id: package
      name: Package release
      run: PATH="$HOME/bin:$PATH" release/release.sh debian
      env:
        GO111MODULE: on
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Upload binary package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ steps.package.outputs.file }}
        asset_name: ${{ steps.package.outputs.file }}
        asset_content_type: application/vnd.debian.binary-package
  rpm:
    name: RPM
    runs-on: ubuntu-18.04
    steps:
    - name: Install rpm
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends rpm
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "^1.15"
    - name: Check out code
      uses: actions/checkout@v2
    - name: Download dependencies
      run: go mod download
      env:
        GO111MODULE: on
    - id: package
      name: Package release
      run: release/release.sh rpm
      env:
        GO111MODULE: on
    - name: Upload binary package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ steps.package.outputs.file }}
        asset_name: ${{ steps.package.outputs.name }}
        asset_content_type: application/octet-stream
  homebrew:
    name: Homebrew
    runs-on: ubuntu-latest
    steps:
    - name: Trigger bump workflow
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.INFRABOT_TOKEN}}
        script: |
          const tag = context.ref.substring('refs/tags/'.length);
          await github.actions.createWorkflowDispatch({
            owner: 'yourbase',
            repo: 'homebrew-yourbase',
            workflow_id: 'bump.yml',
            ref: 'main',
            inputs: {tag},
          });
